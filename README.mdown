[![Build Status](https://travis-ci.org/pypt/p5-Gearman-JobScheduler.svg?branch=develop)](https://travis-ci.org/pypt/p5-Gearman-JobScheduler) [![Coverage Status](https://coveralls.io/repos/github/pypt/p5-Gearman-JobScheduler/badge.svg?branch=develop)](https://coveralls.io/github/pypt/p5-Gearman-JobScheduler)

# Gearman::JobScheduler

Perl worker / client library for running jobs on [Gearman](http://gearman.org/).

## Features

* Automattic worker logging via [Log::Log4perl](http://search.cpan.org/~mschilli/Log-Log4perl/)
* Restarting failed jobs
* Progress reporting
* Email reports about failed jobs

## Sample

### Worker

```perl
package AddTwoNumbers;

use strict;
use warnings;

use Moose;
with 'Gearman::JobScheduler::AbstractFunction';

sub run($;$)
{
    my ( $self, $args ) = @_;

    my $number_1 = $args->{ number_1 };
    my $number_2 = $args->{ number_2 };

    # Write the sum to the database here
    say STDERR "Sum: " . ( $number_1 + $number_2 );

    return 1;
}

no Moose;    # gets rid of scaffolding

# Return package name instead of 1 or otherwise worker.pl won't know the
# name of the package it's loading
__PACKAGE__;
```

### Client

```perl
use AddTwoNumbers;

my $args = { number_1 => 3, number_2 => 4 };

# Run locally, like any other function
AddTwoNumbers->run_locally( $args );

# Run on Gearman, wait for the function to finish
AddTwoNumbers->run_on_gearman( $args );

# Add to Gearman's queue and return instantly, don't wait for the function to finish
AddTwoNumbers->enqueue_on_gearman( $args );
```


# Development Notes

## Code formatting

Install `perltidy` Git hook to automatically fix script formatting:

    cpanm --installdeps .
    githook-perltidy install
